[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "setuptools-scm"]

[project]
name = "charon"
version = "1.3.4"
authors = [
  {name = "RedHat EXD SPMM"},
]
readme = "README.md"
keywords = ["charon", "mrrc", "maven", "npm", "build", "java"]
license-files = ["LICENSE"]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Topic :: Software Development :: Build Tools",
  "Topic :: Utilities",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "Jinja2>=3.1.3",
  "boto3>=1.18.35",
  "botocore>=1.21.35",
  "click>=8.1.3",
  "requests>=2.25.0",
  "PyYAML>=5.4.1",
  "defusedxml>=0.7.1",
  "subresource-integrity>=0.2",
  "jsonschema>=4.9.1",
  "urllib3>=1.25.10",
  "semantic-version>=2.10.0",
  "python-qpid-proton>=0.39.0"
]

[project.optional-dependencies]
dev = [
  "pylint",
  "flake8",
  "pep8",
  "mypy",
  "tox",
]
test = [
  "flexmock>=0.10.6",
  "responses>=0.9.0",
  "pytest<=7.1.3",
  "pytest-cov",
  "pytest-html",
  "requests-mock",
  "moto>=5.0.16,<6",
  "python-gnupg>=0.5.0,<1"
]

[project.scripts]
charon = "charon.cmd:cli"

[tool.setuptools]
packages = ["charon"]

[tool.setuptools_scm]
fallback_version = "1.3.4+dev.fallback"

[tool.setuptools.package-data]
charon = ["schemas/*.json"]

[tool.mypy]
python_version = "3.9"

[tool.coverage.report]
skip_covered = true
show_missing = true
fail_under = 90
exclude_lines = [
  "def __repr__",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "return NotImplemented",
]

[tool.pytest.ini_options]
log_cli_level = "DEBUG"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
testpaths = [
    "tests",
]

[tool.flake8]
show_source = true
ignore = [
  "D100", # missing docstring in public module
  "D104", # missing docstring in public package
  "D105", # missing docstring in magic method
  "W503", # line break before binary operator
  "E203", # whitespace before ':'
  "E501", # line too long
  "E731", # do not assign a lambda expression
]
per-file-ignores = [
  "tests/*:D101,D102,D103", # missing docstring in public class, method, function
]
