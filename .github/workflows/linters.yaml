name: Linters

on:
  pull_request:

  push:
    branches:
      - main
      - release_*

jobs:
  flake8:
    name: Flake8 for Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.8" ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox

      - name: Run flake8 on python${{ matrix.python-version }}
        run: python -m tox -e flake8

  markdownlint:
   name: Markdownlint
   runs-on: ubuntu-latest

   steps:
     - name: Check out repo
       uses: actions/checkout@v2

     - name: Run markdownlint
       uses: containerbuildsystem/actions/markdownlint@master

  pylint:
    name: Pylint analyzer for Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.8" ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox

      - name: Run pylint on python${{ matrix.python-version }}
        run: python -m tox -e pylint

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Run ShellCheck
        uses: containerbuildsystem/actions/shellcheck@master

#  mypy:
#    name: mypy type checker for Python ${{ matrix.python-version }}
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        python-version: [ "3.8" ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip setuptools tox
#
#      - name: Run mypy on python${{ matrix.python-version }}
#        run: python -m tox -e mypy

  bandit:
    name: Bandit analyzer for Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.8" ]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox

      - name: Run bandit analyzer on python${{ matrix.python-version }}
        run: python -m tox -e bandit

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # We do not recommend to use this in a pull request. Prefer using pull request
      # decoration instead.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
